generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Client {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String  @unique
  phone      String  @unique
  isVerified Boolean @default(false)

  otp Otp[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Otp {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  otp       String
  createdAt DateTime @default(now())

  client   Client? @relation(fields: [clientId], references: [id])
  clientId String? @db.ObjectId
}

model User {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  email   String @unique
  name    String
  role    String
  clerkId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Store {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  label String @unique
  value String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  url String
  key String

  categoryId    String? @db.ObjectId
  subcategoryId String? @db.ObjectId
  productId     String? @db.ObjectId

  category    Category?    @relation(fields: [categoryId], references: [id])
  subcategory Subcategory? @relation(fields: [subcategoryId], references: [id])
  product     Product?     @relation(fields: [productId], references: [id])
}

model Category {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique

  image       Image[]
  subcategory Subcategory[]
  product     Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Subcategory {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  name       String @unique
  categoryId String @db.ObjectId

  image    Image[]
  category Category @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product[]
}

model Product {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  stock       Int
  discount    Float?
  image       Image[]

  categoryId    String @db.ObjectId
  subcategoryId String @db.ObjectId

  category    Category    @relation(fields: [categoryId], references: [id])
  subcategory Subcategory @relation(fields: [subcategoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
